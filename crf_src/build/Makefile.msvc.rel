# Directories:
SRCDIR=../src/
INCDIR=../inc/


CC = cl
CXXC = cl
LINK=link
CFLAGS =  /O2 /GA /GL /Gy /Oi /O2 /Ob2 /nologo /W3 /EHsc /Zi /MTd /wd4244
LIB_PATH = /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\/lib/Win32" /LIBPATH:"..\..\cuda\common\lib" 
LDFLAGS = /link  /debug /OPT:REF /OPT:ICF /LTCG /NXCOMPAT $(LIB_PATH) /DYNAMICBASE ADVAPI32.LIB cutil32D.lib cudart.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib  odbccp32.lib 
DEFS =  -D_WIN32 -D_SCL_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_DEBUG -DDLL_EXPORT -DHAVE_WINDOWS_H -DVERSION="\"0.54\"" -DPACKAGE="\"CRF++\""
INC = -I. -I"../inc" -I"c:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\include" -I"..\..\cuda\common\inc" -I"..\..\cuda\shared\inc" -I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\\include"
DEL = del

# CUDA Definitions
CUDA_CC = "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\\bin\nvcc.exe"
CUDA_CFLAGS = -gencode=arch=compute_11,code=\"sm_11,compute_11\" --machine 32 -ccbin "d:\Program Files\Microsoft Visual Studio 9.0\VC\bin"    -Xcompiler "/O2 /GA /GL /Gy /Oi /Ob2 /nologo /W3 /EHsc /Zi /MTd /wd4244  " 
INC_CUDA = -I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\/include" -I"../inc" -I"../../cuda/common/inc" -I"../../cuda/shared/inc" -I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\\include"
DEFS_CUDA = -maxrregcount=32 -D_DEBUG




OBJ = encoder.obj feature.obj feature_cache.obj libcrfpp.obj feature_index.obj node.obj param.obj path.obj tagger.obj lbfgs.obj

all: libcrfpp crf_learn crf_test 

encoder.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)encoder.cpp 
	
feature.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)feature.cpp 

feature_cache.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)feature_cache.cpp 

libcrfpp.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)libcrfpp.cpp 

feature_index.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)feature_index.cpp 

node.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)node.cpp 

param.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)param.cpp 

path.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)path.cpp 

tagger.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)tagger.cpp 
	
lbfgs.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)lbfgs.cpp 

crf_learn.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)crf_learn.cpp 
	
crf_test.obj:
	$(CXXC) $(CFLAGS) $(INC) $(DEFS) -c $(SRCDIR)crf_test.cpp 
	
cuda_obj:
	$(CUDA_CC) $(CUDA_CFLAGS) $(INC_CUDA) $(DEFS_CUDA)  --compile  -o  cppIntegration.cu.obj "../src/cppIntegration.cu"

cuda: cuda_obj main.obj
	$(LINK) $(LDFLAGS) $(LIB_PATH) /out:$@.exe main.obj cppIntegration_gold.obj cppIntegration.cu.obj /MACHINE:X86 cudart.lib cutil32D.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib

libcrfpp:  cuda_obj $(OBJ)
        $(LINK) $(LDFLAGS) /out:$@.dll $(OBJ) cppIntegration.cu.obj /dll
		cp ../../cuda_test/lib/* . 
		
crf_learn: $(OBJ) crf_learn.obj 
	$(LINK) $(LDFLAGS)  /out:$@.exe crf_learn.obj libcrfpp.lib cutil32D.lib
	
crf_test: $(OBJ) crf_test.obj
	$(LINK) $(LDFLAGS) /out:$@.exe crf_test.obj libcrfpp.lib 
	
clean:
	del *.obj crf_learn.exe crf_test.exe *.dll *.lib *.exp *.pdb
      
